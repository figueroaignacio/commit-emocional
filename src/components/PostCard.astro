---
// Components
import DrawingPin from '@/icons/DrawingPin.astro';
import ExternalLink from '@/icons/ExternalLink.astro';
import Badge from './Badge.astro';

// Utils
import { formatDate } from '@/lib/utils';

interface PostCardProps {
  title: string;
  description: string;
  slug: string;
  publishedAt: string;
  pinned: boolean;
  categories: { title: string }[];
}

const { title, description, slug, publishedAt, pinned, categories } = Astro.props;

const date = formatDate(publishedAt);
---

<article class="post-card">
  <div class="post-card-header">
    <p class="post-card-date">{date}</p>
    {pinned ? <DrawingPin /> : <ExternalLink />}
  </div>
  <a href={`/post/${slug}`} class="post-card-link">
    <h2 class="post-card-title">{title}</h2>
  </a>
  <p class="post-card-description">{description}</p>
  <ul class="post-card-categories">
    {
      categories.map((category: { title: string }) => (
        <li>
          <Badge>{category.title}</Badge>
        </li>
      ))
    }
  </ul>
</article>

<style>
  .post-card {
    margin-bottom: 1rem;
    background: var(--background);
    transition: border-color 0.2s ease;
    border-bottom: 1px solid var(--border);
    padding-bottom: 1rem;
  }

  .post-card-link {
    display: block;
    text-decoration: none;
    color: var(--accent);
    text-decoration: underline;
  }

  .post-card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .post-card-title {
    font-size: 1rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
  }

  .post-card-description {
    font-size: 0.95rem;
    color: var(--muted-foreground);
    margin-bottom: 0.75rem;
  }

  .post-card-date {
    font-size: 0.7rem;
    color: var(--muted-foreground);
  }

  .post-card-categories {
    display: flex;
    gap: 0.75rem;
  }
</style>
