---
// Components
import MenuIcon from '@/icons/MenuIcon.astro';
import Cross from '@/icons/Cross.astro';
import Logo from './Logo.astro';

const navigation = [
  { label: 'Inicio', href: '/' },
  { label: 'Art√≠culos', href: '/posts' },
];
---

<header class="header">
  <div class="container">
    <nav class="nav">
      <Logo />
      <button class="menu-button" id="menuButton" aria-label="Toggle menu" data-state="closed">
        <span class="icon menu-icon"><MenuIcon /></span>
        <span class="icon cross-icon" aria-hidden="true"><Cross /></span>
      </button>
      <ul class="menu-list" id="menuList" data-state="closed">
        {
          navigation.map((item) => (
            <li class="list-item">
              <a href={item.href} class="list-anchor">
                {item.label}
              </a>
            </li>
          ))
        }
      </ul>
      <div class="overlay" id="menuOverlay" data-state="closed"></div>
    </nav>
  </div>
</header>

<style>
  .header {
    border-bottom: 1px solid var(--border);
    padding-block: 0.75rem;
    background-color: var(--card);
    position: sticky;
    inset: 0;
    backdrop-filter: blur(0.4375rem);
  }

  .container {
    max-width: 47.75rem;
    margin: 0 auto;
    padding: 0.25rem 1rem;
  }

  .nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
  }

  .menu-button {
    background: none;
    border: none;
    font-size: 2rem;
    cursor: pointer;
    display: none;
    z-index: 200;
    position: relative;
  }

  .menu-button .cross-icon {
    display: none;
  }

  .menu-button[data-state='open'] .menu-icon {
    display: none;
  }

  .menu-button[data-state='open'] .cross-icon {
    display: inline;
  }

  .menu-list {
    display: flex;
    list-style: none;
    gap: 1rem;
    padding: 0;
  }

  .list-anchor {
    text-decoration: none;
    color: var(--muted-foreground);
    font-size: 0.9rem;
  }

  .list-anchor:hover {
    color: var(--accent);
    text-decoration: underline;
  }

  .overlay {
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s ease;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    z-index: 90;
  }

  .overlay[data-state='open'] {
    opacity: 1;
    pointer-events: auto;
  }

  @media (max-width: 768px) {
    .menu-button {
      display: block;
    }

    .menu-list {
      flex-direction: column;
      display: none;
      position: fixed;
      top: 0;
      right: 0;
      bottom: 0;
      height: 100vh;
      background: var(--background);
      padding: 5rem 1.5rem 1.5rem;
      z-index: 110;
      transform: translateX(100%);
      opacity: 0;
      visibility: hidden;
      pointer-events: none;
      transition:
        transform 0.3s ease-in-out,
        opacity 0.3s ease-in-out,
        visibility 0.3s ease-in-out;
    }

    .menu-list[data-state='open'] {
      transform: translateX(0);
      opacity: 1;
      visibility: visible;
      pointer-events: auto;
      display: block;
      width: 100%;
    }

    .list-item {
      margin-bottom: 1rem;
      font-size: 1.2rem;
    }

    .overlay {
      opacity: 0;
      pointer-events: none;
      visibility: hidden;
      transition:
        opacity 0.3s ease,
        visibility 0.3s ease;
    }

    .overlay[data-state='open'] {
      opacity: 1;
      visibility: visible;
      pointer-events: auto;
    }
  }
</style>

<script is:inline>
  function main() {
    const menuButton = document.getElementById('menuButton');
    const menuOverlay = document.getElementById('menuOverlay');
    const menuList = document.getElementById('menuList');

    function toggle() {
      const isOpen = menuList.getAttribute('data-state') === 'open';
      const newState = isOpen ? 'closed' : 'open';

      menuList.setAttribute('data-state', newState);
      menuOverlay.setAttribute('data-state', newState);
      menuButton.setAttribute('data-state', newState);

      document.body.style.overflow = isOpen ? '' : 'hidden';
    }

    menuButton.onclick = toggle;
    menuOverlay.onclick = toggle;

    document.removeEventListener('keydown', handleKeydown);
    document.addEventListener('keydown', handleKeydown);

    function handleKeydown(e) {
      if (e.key === 'Escape' && menuList.getAttribute('data-state') === 'open') {
        toggle();
      }
    }
  }

  document.addEventListener('DOMContentLoaded', main);
  document.addEventListener('astro:after-swap', main);
</script>
