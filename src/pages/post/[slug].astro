---
import PortableText from '@/components/PortableText.astro';
import Separator from '@/components/Separator.astro';
import PostLayout from '@/layouts/PostLayout.astro';
import { loadQuery } from '@/sanity/lib/load-query';
import type { SanityDocument } from '@sanity/client';

export async function getStaticPaths() {
  const { data: posts } = await loadQuery<SanityDocument[]>({
    query: `*[_type == "post"]`,
  });

  return posts.map(({ slug }) => ({
    params: { slug: slug.current },
  }));
}

const { params } = Astro;

const { data: post } = await loadQuery<{
  title: string;
  description: string;
  publishedAt: string;
  body: any[];
  author: { name: string };
}>({
  query: `
    *[_type == "post" && slug.current == $slug][0]{
      title,
      description,
      publishedAt,
      body,
      author->{
        name
      }
    }
  `,
  params: { slug: params.slug },
});

const date = new Date(post.publishedAt).toLocaleDateString('es-AR', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

const wordCount = post.body
  .map((block) => block.children?.map((c: { text: string }) => c.text).join(' ') ?? '')
  .join(' ')
  .split(/\s+/).length;

const readingTime = Math.max(1, Math.round(wordCount / 200));
---

<PostLayout title={post.title} description={post.description}>
  <header class="post-meta">
    <h1 class="post-title">{post.title}</h1>
    <p class="post-description">{post.description}</p>
    <p class="post-info">
      Escrito por joven ingenuo · {date} · {readingTime} min de lectura
    </p>
  </header>
  <Separator />
  <PortableText portableText={post.body} />
</PostLayout>

<style>
  .post-meta {
    margin-bottom: 2rem;
  }

  .post-info {
    font-size: 0.6rem;
    color: var(--muted-foreground);
    margin-bottom: 0.75rem;
  }

  .post-title {
    font-size: 1.75rem;
    font-weight: 800;
    color: var(--foreground);
    margin-bottom: 0.5rem;
  }

  .post-description {
    font-size: 1rem;
    color: var(--muted-foreground);
  }
</style>
